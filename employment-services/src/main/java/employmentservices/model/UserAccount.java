package employmentservices.model;
// Generated 22.06.2018 15:44:18 by Hibernate Tools 5.2.10.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * UserAccount generated by hbm2java
 */
@Entity
@Table(name = "user_account")
public class UserAccount implements java.io.Serializable {

	private int id;
	private UserType userType;
	private String email;
	private String password;
	private boolean isActive;
	private boolean smsNotificationActive;
	private boolean emailNotificationActive;
	private Date registrationDate;
	private Set<JobPost> jobPosts = new HashSet<JobPost>(0);
	private UserLog userLog;
	private Set<JobPostActivity> jobPostActivities = new HashSet<JobPostActivity>(0);
	private Set<SeekerProfile> seekerProfiles = new HashSet<SeekerProfile>(0);

	public UserAccount() {
	}

	public UserAccount(int id, UserType userType, String email, String password, boolean isActive,
			boolean smsNotificationActive, boolean emailNotificationActive, Date registrationDate) {
		this.id = id;
		this.userType = userType;
		this.email = email;
		this.password = password;
		this.isActive = isActive;
		this.smsNotificationActive = smsNotificationActive;
		this.emailNotificationActive = emailNotificationActive;
		this.registrationDate = registrationDate;
	}

	public UserAccount(int id, UserType userType, String email, String password, boolean isActive,
			boolean smsNotificationActive, boolean emailNotificationActive, Date registrationDate,
			Set<JobPost> jobPosts, UserLog userLog, Set<JobPostActivity> jobPostActivities,
			Set<SeekerProfile> seekerProfiles) {
		this.id = id;
		this.userType = userType;
		this.email = email;
		this.password = password;
		this.isActive = isActive;
		this.smsNotificationActive = smsNotificationActive;
		this.emailNotificationActive = emailNotificationActive;
		this.registrationDate = registrationDate;
		this.jobPosts = jobPosts;
		this.userLog = userLog;
		this.jobPostActivities = jobPostActivities;
		this.seekerProfiles = seekerProfiles;
	}

	@Id

	@Column(name = "id", unique = true, nullable = false)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "user_type_id", nullable = false)
	public UserType getUserType() {
		return this.userType;
	}

	public void setUserType(UserType userType) {
		this.userType = userType;
	}

	@Column(name = "email", nullable = false)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "password", nullable = false, length = 100)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Column(name = "is_active", nullable = false)
	public boolean isIsActive() {
		return this.isActive;
	}

	public void setIsActive(boolean isActive) {
		this.isActive = isActive;
	}

	@Column(name = "sms_notification_active", nullable = false)
	public boolean isSmsNotificationActive() {
		return this.smsNotificationActive;
	}

	public void setSmsNotificationActive(boolean smsNotificationActive) {
		this.smsNotificationActive = smsNotificationActive;
	}

	@Column(name = "email_notification_active", nullable = false)
	public boolean isEmailNotificationActive() {
		return this.emailNotificationActive;
	}

	public void setEmailNotificationActive(boolean emailNotificationActive) {
		this.emailNotificationActive = emailNotificationActive;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "registration_date", nullable = false, length = 13)
	public Date getRegistrationDate() {
		return this.registrationDate;
	}

	public void setRegistrationDate(Date registrationDate) {
		this.registrationDate = registrationDate;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userAccount")
	public Set<JobPost> getJobPosts() {
		return this.jobPosts;
	}

	public void setJobPosts(Set<JobPost> jobPosts) {
		this.jobPosts = jobPosts;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "userAccount")
	public UserLog getUserLog() {
		return this.userLog;
	}

	public void setUserLog(UserLog userLog) {
		this.userLog = userLog;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userAccount")
	public Set<JobPostActivity> getJobPostActivities() {
		return this.jobPostActivities;
	}

	public void setJobPostActivities(Set<JobPostActivity> jobPostActivities) {
		this.jobPostActivities = jobPostActivities;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userAccount")
	public Set<SeekerProfile> getSeekerProfiles() {
		return this.seekerProfiles;
	}

	public void setSeekerProfiles(Set<SeekerProfile> seekerProfiles) {
		this.seekerProfiles = seekerProfiles;
	}

}
