package employmentservices.model.job;
// Generated 22.06.2018 15:44:18 by Hibernate Tools 5.2.10.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.springframework.format.annotation.DateTimeFormat;

import employmentservices.model.company.Company;
import employmentservices.model.seeker.Currency;
import employmentservices.model.user.UserAccount;

/**
 * JobPost generated by hbm2java
 */
@Entity
@Table(name = "job_post")
public class JobPost implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 7552630640484962288L;
	private int id;
	private Company company;
	private Currency currency;
	private JobDegree jobDegree;
	private JobType jobType;
	private Location location;
	private UserAccount userAccount;
	private String jobTitle;
	private boolean isCompanyNameHidden;
	private String description;
	private String applicationWebsite;
	private int salary;
	private int workingHours;
	private int experienceYears;
	private String jobDetail;
	private Date createdDate;
	private boolean isActive;
	private String coverImagePath;
	private Set<JobPostActivity> jobPostActivities = new HashSet<JobPostActivity>(0);

	public JobPost() {
	}

	public JobPost(int id, Company company, Currency currency, JobDegree jobDegree, JobType jobType, Location location,
			UserAccount userAccount, String jobTitle, boolean isCompanyNameHidden, String description,
			String applicationWebsite, int salary, int workingHours, int experienceYears, String jobDetail,
			Date createdDate, boolean isActive, String coverImagePath) {
		this.id = id;
		this.company = company;
		this.currency = currency;
		this.jobDegree = jobDegree;
		this.jobType = jobType;
		this.location = location;
		this.userAccount = userAccount;
		this.jobTitle = jobTitle;
		this.isCompanyNameHidden = isCompanyNameHidden;
		this.description = description;
		this.applicationWebsite = applicationWebsite;
		this.salary = salary;
		this.workingHours = workingHours;
		this.experienceYears = experienceYears;
		this.jobDetail = jobDetail;
		this.createdDate = createdDate;
		this.isActive = isActive;
		this.coverImagePath = coverImagePath;
	}

	public JobPost(int id, Company company, Currency currency, JobDegree jobDegree, JobType jobType, Location location,
			UserAccount userAccount, String jobTitle, boolean isCompanyNameHidden, String description,
			String applicationWebsite, int salary, int workingHours, int experienceYears, String jobDetail,
			Date createdDate, boolean isActive, String coverImagePath, Set<JobPostActivity> jobPostActivities) {
		this.id = id;
		this.company = company;
		this.currency = currency;
		this.jobDegree = jobDegree;
		this.jobType = jobType;
		this.location = location;
		this.userAccount = userAccount;
		this.jobTitle = jobTitle;
		this.isCompanyNameHidden = isCompanyNameHidden;
		this.description = description;
		this.applicationWebsite = applicationWebsite;
		this.salary = salary;
		this.workingHours = workingHours;
		this.experienceYears = experienceYears;
		this.jobDetail = jobDetail;
		this.createdDate = createdDate;
		this.isActive = isActive;
		this.coverImagePath = coverImagePath;
		this.jobPostActivities = jobPostActivities;
	}

	@Id @GeneratedValue(strategy=GenerationType.SEQUENCE, generator = "job_post_generator")
	@SequenceGenerator(name="job_post_generator", sequenceName = "job_post_id_seq")

	@Column(name = "id", unique = true, nullable = false)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "company_id", nullable = false)
	public Company getCompany() {
		return this.company;
	}

	public void setCompany(Company company) {
		this.company = company;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "currency_id", nullable = false)
	public Currency getCurrency() {
		return this.currency;
	}

	public void setCurrency(Currency currency) {
		this.currency = currency;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "job_degree_id", nullable = false)
	public JobDegree getJobDegree() {
		return this.jobDegree;
	}

	public void setJobDegree(JobDegree jobDegree) {
		this.jobDegree = jobDegree;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "job_type_id", nullable = false)
	public JobType getJobType() {
		return this.jobType;
	}

	public void setJobType(JobType jobType) {
		this.jobType = jobType;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "location_id", nullable = false)
	public Location getLocation() {
		return this.location;
	}

	public void setLocation(Location location) {
		this.location = location;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "posted_by_id", nullable = false)
	public UserAccount getUserAccount() {
		return this.userAccount;
	}

	public void setUserAccount(UserAccount userAccount) {
		this.userAccount = userAccount;
	}

	@Column(name = "job_title", nullable = false, length = 200)
	public String getJobTitle() {
		return this.jobTitle;
	}

	public void setJobTitle(String jobTitle) {
		this.jobTitle = jobTitle;
	}

	@Column(name = "is_company_name_hidden", nullable = false)
	public boolean isIsCompanyNameHidden() {
		return this.isCompanyNameHidden;
	}

	public void setIsCompanyNameHidden(boolean isCompanyNameHidden) {
		this.isCompanyNameHidden = isCompanyNameHidden;
	}

	@Column(name = "description", nullable = false, length = 2000)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "application_website", nullable = false, length = 200)
	public String getApplicationWebsite() {
		return this.applicationWebsite;
	}

	public void setApplicationWebsite(String applicationWebsite) {
		this.applicationWebsite = applicationWebsite;
	}

	@Column(name = "salary", nullable = false)
	public int getSalary() {
		return this.salary;
	}

	public void setSalary(int salary) {
		this.salary = salary;
	}

	@Column(name = "working_hours", nullable = false)
	public int getWorkingHours() {
		return this.workingHours;
	}

	public void setWorkingHours(int workingHours) {
		this.workingHours = workingHours;
	}

	@Column(name = "experience_years", nullable = false)
	public int getExperienceYears() {
		return this.experienceYears;
	}

	public void setExperienceYears(int experienceYears) {
		this.experienceYears = experienceYears;
	}

	@Column(name = "job_detail", nullable = false, length = 4000)
	public String getJobDetail() {
		return this.jobDetail;
	}

	public void setJobDetail(String jobDetail) {
		this.jobDetail = jobDetail;
	}

	@Temporal(TemporalType.DATE)
	@DateTimeFormat(pattern="dd.MM.yyyy")
	@Column(name = "created_date", nullable = false, length = 13)
	public Date getCreatedDate() {
		return this.createdDate;
	}

	public void setCreatedDate(Date createdDate) {
		this.createdDate = createdDate;
	}

	@Column(name = "is_active", nullable = false)
	public boolean isIsActive() {
		return this.isActive;
	}

	public void setIsActive(boolean isActive) {
		this.isActive = isActive;
	}

	@Column(name = "cover_image_path", nullable = false, length = 200)
	public String getCoverImagePath() {
		return this.coverImagePath;
	}

	public void setCoverImagePath(String coverImagePath) {
		this.coverImagePath = coverImagePath;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "jobPost")
	public Set<JobPostActivity> getJobPostActivities() {
		return this.jobPostActivities;
	}

	public void setJobPostActivities(Set<JobPostActivity> jobPostActivities) {
		this.jobPostActivities = jobPostActivities;
	}

}
